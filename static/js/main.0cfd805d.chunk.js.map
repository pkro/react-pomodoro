{"version":3,"sources":["TimeDisplay.jsx","MinuteSetter.jsx","Activitys/ActivityLog.jsx","Activitys/ActivityPanel.jsx","constants.js","Pomodoro.jsx","App.jsx","index.js"],"names":["seconds2display","numSeconds","minutes","Math","floor","toString","padStart","newSeconds","TimeDisplay","seconds","id","displayTime","undefined","MinuteSetter","onChange","title","ids","display","plus","minus","className","style","borderBottom","marginTop","marginBottom","type","onClick","ActivityLog","log","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","activities","map","obj","key","name","timeSpent","ActivityPanel","logNotifier","useState","runner","setLog","setActivities","activityText","setActivityText","activity","setActivity","useEffect","length","filter","Grid","container","direction","justify","paddingBottom","Select","native","e","parseInt","target","value","marginRight","TextField","Button","find","newId","max","Pomodoro","workTime","setWorkTime","pauseTime","setPauseTime","timerRunning","setTimerRunning","DEFAULT_WORK","timer","setTimer","mode","setMode","notification","setLogNotifier","audio","useRef","timerLabel","changeTime","getAttribute","isWorkSession","indexOf","isIncrement","newTime","useInterval","document","current","innerText","play","beep","getElementById","pause","currentTime","ref","controlFor","src","preload","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.0cfd805d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function seconds2display(numSeconds) {\n  const minutes = Math.floor(numSeconds / 60).toString().padStart(2, '0');\n  const newSeconds = (numSeconds % 60).toString().padStart(2, '0');\n  return `${minutes}:${newSeconds}`;\n}\n\nexport default function TimeDisplay({ seconds, id }) {\n  const displayTime = seconds2display(seconds);\n\n  if (id === undefined) id = 'Minutes';\n\n  return <div id={id}>{displayTime}</div>;\n}\n\nTimeDisplay.propTypes = {\n  seconds: PropTypes.number.isRequired,\n  id: PropTypes.string,\n};\n","import React from 'react';\n\nexport default function MinuteSetter({\n  minutes,\n  onChange,\n  title = \"Minutes:\",\n  ids = {\n    display: 'timeDisplay',\n    plus: 'time-increment',\n    minus: 'time-decrement',\n  },\n}) {\n  return (\n    <div className=\"minuteSetter\">\n      <div style={{ borderBottom: \"1px solid\", marginTop: \"2%\" }}>\n        {title}\n      </div>\n      <div className=\"minuteDisplay\" id={ids.display} style={{ marginTop: \"2%\", marginBottom: \"2%\" }}>\n        {minutes}\n      </div>\n      <div className=\"minuteSetterButtons\">\n        <button type=\"button\" onClick={onChange} id={ids.minus}>\n          -\n        </button>\n        <button type=\"button\" onClick={onChange} id={ids.plus}>\n          +\n        </button>\n      </div>\n    </div >\n  );\n}\n","import React from 'react';\nimport TimeDisplay from '../TimeDisplay';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nexport default function ActivityLog({ log }) {\n  return (\n    <div id=\"activityLog\">\n      <TableContainer component={Paper}>\n        <Table size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Time spent</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {log.activities.map(obj => {\n              return (\n                <TableRow key={obj.key}>\n                  <TableCell>{obj.name}</TableCell>\n                  <TableCell>\n                    <TimeDisplay seconds={obj.timeSpent} />\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport ActivityLog from './ActivityLog';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nexport default function ActivityPanel({ logNotifier }) {\n  const [log, setLog] = useState({ runner: 1, activities: [] });\n  const [activities, setActivities] = useState([]);\n  const [activityText, setActivityText] = useState([]);\n  const [activity, setActivity] = useState({\n    id: 0,\n    name: 'Updating...',\n  });\n\n  const changeCurrentActivity = e => {\n    const id = parseInt(e.target.value, 10);\n    const { name } = activities.filter(obj => obj.id === id)[0];\n\n    setActivity({ id, name });\n  };\n\n  const handleChange = e => {\n    setActivityText(e.target.value);\n  };\n\n  const addActivity = () => {\n    if (activities.find(e => e.name === activityText) === undefined && activityText.length > 0) {\n      const newId = Math.max(...activities.map(obj => obj.id)) + 1;\n      setActivities([...activities, { id: newId, name: activityText }]);\n    }\n    setActivityText('');\n  };\n\n  useEffect(() => {\n    setActivities([\n      {\n        id: 1,\n        name: 'French',\n      },\n      {\n        id: 2,\n        name: 'Spanish',\n      },\n      {\n        id: 3,\n        name: 'Javascript',\n      },\n      {\n        id: 4,\n        name: 'Typescript',\n      },\n    ]);\n  }, []);\n\n  useEffect(() => {\n    if (activities.length > 0) {\n      setActivity({ id: 1, name: activities.filter(obj => obj.id === 1)[0].name });\n    }\n  }, [activities]);\n\n  useEffect(() => {\n    if (logNotifier.timeSpent === 0) return;\n    setLog({\n      runner: log.runner + 1,\n      activities: [\n        ...log.activities,\n        { key: log.runner, name: activity.name, timeSpent: logNotifier.timeSpent },\n      ],\n    });\n  }, [logNotifier]);\n\n  return (\n    <div id=\"activityPanel\">\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        component={Paper}\n        style={{ paddingBottom: '10px' }}\n      >\n        <Select native onChange={changeCurrentActivity} style={{ marginRight: '30px' }}>\n          {activities.map(obj => (\n            <option value={obj.id} key={obj.id}>\n              {obj.name}\n            </option>\n          ))}\n        </Select>\n        <TextField id=\"newActivity\" value={activityText} onChange={handleChange} />\n        <Button onClick={addActivity}>Add</Button>\n      </Grid>\n      <ActivityLog log={log} />\n    </div>\n  );\n}\n","export const DEFAULT_WORK = 25;\nexport const DEFAULT_PAUSE = 5;\nexport const PAUSE = 1;\nexport const WORK = 2;\nexport const ONESECONDINMILISECONDS = 1000;\n","import React, { useState, useRef } from 'react';\nimport useInterval from 'use-interval';\nimport TimeDisplay, { seconds2display } from './TimeDisplay';\nimport MinuteSetter from './MinuteSetter';\nimport ActivityControls from './Activitys/ActivityPanel';\n\nimport { PAUSE, WORK, DEFAULT_WORK, DEFAULT_PAUSE, ONESECONDINMILISECONDS } from './constants';\n\nconst Pomodoro = () => {\n  const [workTime, setWorkTime] = useState(DEFAULT_WORK);\n  const [pauseTime, setPauseTime] = useState(DEFAULT_PAUSE);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const [timer, setTimer] = useState(DEFAULT_WORK * 60);\n  const [mode, setMode] = useState(WORK);\n  const [logNotifier, setLogNotifier] = useState({ notification: true, timeSpent: 0 });\n\n  let audio = useRef();\n  let timerLabel = useRef();\n\n  const changeTime = e => {\n    if (timerRunning) {\n      return;\n    }\n\n    const id = e.target.getAttribute('id');\n    const isWorkSession = id.indexOf('session') !== -1;\n    const isIncrement = id.indexOf('increment') !== -1;\n\n    let newTime = isWorkSession ? workTime : pauseTime;\n    const callFunc = isWorkSession ? setWorkTime : setPauseTime;\n\n    newTime = isIncrement ? newTime + 1 : newTime - 1;\n    if (newTime > 0 && newTime <= 60) {\n      callFunc(newTime);\n    }\n    if (isWorkSession) setTimer(newTime * 60);\n  };\n\n  const resetTimer = () => {\n    setTimerRunning(false);\n    setWorkTime(DEFAULT_WORK);\n    setPauseTime(DEFAULT_PAUSE);\n    setTimer(DEFAULT_WORK * 60);\n    timerLabel.current.innerText = 'Press start';\n    const beep = document.getElementById('beep');\n    if (audio.current !== null) {\n      beep.pause();\n      beep.currentTime = 0;\n    }\n  }\n\n  useInterval(\n    () => {\n      if (timer > 0) {\n        setTimer(timer - 1);\n        document.title = `${mode === WORK ? 'Work' : 'Pause'} ${seconds2display(timer)}`;\n      } else if (mode === WORK) {\n        setTimer(pauseTime * 60);\n        setMode(PAUSE);\n        timerLabel.current.innerText = 'Pause';\n        if (audio.current !== null) {\n          audio.current.play();\n        }\n        setLogNotifier({\n          notification: !logNotifier.notification,\n          timeSpent: workTime * 60 - timer,\n        });\n      } else {\n        setTimer(workTime * 60);\n        setMode(WORK);\n        if (audio.current !== null) {\n          audio.current.play();\n        }\n        timerLabel.current.innerText = 'Work';\n      }\n    },\n    timerRunning ? ONESECONDINMILISECONDS : null\n  );\n\n  const toggleTimer = () => {\n    setTimerRunning(!timerRunning);\n  };\n\n  return (\n    <div id=\"pomodoro\">\n      <div id=\"head\">\n        <h1>Pomodoro</h1>\n        <button type=\"button\" onClick={resetTimer} id=\"reset\">\n          Reset\n          </button>\n      </div>\n\n      <h4 id=\"timer-label\" ref={timerLabel}>Press start</h4>\n      <div id=\"timerHolder\">\n        <TimeDisplay seconds={timer} id=\"time-left\" />\n      </div>\n      <div className=\"timerControls\">\n        <MinuteSetter\n          minutes={workTime}\n          onChange={changeTime}\n          ids={{\n            display: 'session-length',\n            plus: 'session-increment',\n            minus: 'session-decrement',\n          }}\n          title={<div id=\"session-label\">Work time</div>}\n        />\n\n        <MinuteSetter\n          minutes={pauseTime}\n          onChange={changeTime}\n          controlFor=\"PAUSE\"\n          ids={{\n            display: 'break-length',\n            plus: 'break-increment',\n            minus: 'break-decrement',\n          }}\n          title={<div id=\"break-label\">Break time</div>}\n        />\n      </div>\n      <button type=\"button\" onClick={toggleTimer} id=\"start_stop\">\n        {timerRunning ? 'Pause' : 'Start'}\n      </button>\n\n      <ActivityControls logNotifier={logNotifier} />\n\n      <audio src=\"beep.mp3\" ref={audio} id=\"beep\" preload=\"none\" />\n    </div>\n  );\n};\n\nexport default Pomodoro;\n","import React from 'react';\nimport Pomodoro from './Pomodoro';\nimport './cssReset.scss';\nimport './App.scss';\n\nfunction App() {\n  return <Pomodoro />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}